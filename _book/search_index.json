[["lab-1-elasticsearch-and-kibana-up-and-running.html", "1 Lab 1 - Elasticsearch and Kibana up and running 1.1 Software. 1.2 Starting Elasticsearch from the Command Line 1.3 Start Elasticsearch", " 1 Lab 1 - Elasticsearch and Kibana up and running The goal of this chapter is to have our Elasticsearch instance up and running. Once we have started Elasticsearch we will be able to start Kibana. Most of our the labs will be executed using the Command Line (CMD, Powershell) and browsing through the interface in Kibana. 1.1 Software. 1.1.1 Download and extract the software in your Home Directory Make sure we have downloaded the required software: Elasticsearch Kibana Logstash version 7.8.0 (Preferably Logstash version 7.11. However, this version has some issues. In that case, go for Logstash version 7.8.0) Filebeat Metricbeat Winlogbeat Make sure you save and extract the files in your Home Directory. This is the directory with your username that contains files like Documents, Downloads, Pictures etc. This directory is usually found in the path My PC &gt; Users &gt; Arie in which Arie is the name of my Home Directory. If you cannot see your Home Directory in your Explorer, enable Hidden Files Unzip each file. You will end up with the following files. Overview of the files in your Home Directory Notes: To keep your Home Directory tidy, you can delete the zip/tar files since we do not need those anymore. In case you have downloaded Logstash 7.8.0, which is advised for these labs, you will have a directory logstash-7.8.0 instead of logstash-7.11.2 as shown in this screenshot. 1.2 Starting Elasticsearch from the Command Line Since we will use Elasticsearch from our own computer, we need to start Elasticsearch manually. We will use the Command Line to execute the script that starts Elasticsearch. In Windows, from the Start menu, open a Command Line window. To find the Command Line we can insert “CMD”. Start the Command Line (Command Prompt) in Windows Navigate to the directory in wich Elasticsearch is located: cd elasticsearch-7.11.2-windows-x86_64/elasticsearch-7.11.2 Use the dir command to get an overview of the content contained in this directory. (elasticsearch-7.11.2-windows-x86_64/elasticsearch-7.11.2) dir Contents of the main elasticsearch directory Note that in this case we passed through another folder to get to the current folder 1.3 Start Elasticsearch Good. From this point we get an overview of all the elements included in our Elasticsearch installation. For now, we are only interested in starting Elasticsearch. The Elasticsourc program, binary, is located in the bin folder. We can start Elasticsearch with the following command: .\\bin\\elasticsearch When Elasticsearch gets started, you will see a similar output as the following screenshot: Elasticsearch started The output from starting Elasticsearch will continue for a little while. For now it is not necessary yet to inspect these output messages: Output Elasticsearch pt.2 When the Elasticsearch stops generating output, when you see a message stating “Node started” (if you are able to find it), Elasticsearch is ready. A traditional way to find out if Elasticsearch is working, we can open our browser and navigate to localhost:9200. This message indicates Elasticsearch is succesfully started Now that our Elasticsearch instance is running, we can start Kibana to get a visual interface for everything we want to in Elasticsearch. "],["start-kibana.html", "2 Start Kibana", " 2 Start Kibana Like all the other software in these labs, we will start Kibana from the Command Line. Open the a New Command Line window. We do not want to close our Command Line window that has Elasticsearch running. We cannot run Kibana if Elasticsearch is not running. Open a new Command Line window and navigate to the directory containing Kibana. cd kibana-7.11.2-windows-x86_64 Start Kibana just like we have started Elasticsearch in the previous steps: .\\bin\\kibana Just like Elasticsearch, Kibana needs some time to boot. You will see messages indicating that it will look for a running Elasticsearch instance. Based on that, it will return messages like “Yellow” and “Green” which indicates we are ready to use Kibana. While Elasticsearch default runs in port 9200, Kibana runs in port 5601. Open a new browser tab and navigate to localhost:5601. The homepage of Kibana will be displayed. The Kibana homepage "],["lab-2-metricbeat.html", "3 Lab 2 - Metricbeat 3.1 Setup Metricbeat for the first time 3.2 Check out the Metrics Dashboard 3.3 Enable the Metrics Dashboard in Kibana 3.4 Specify Index Patterns 3.5 Checkout our Metrics 3.6 Check out our Metrics in the Dashboard 3.7 Metrics in Dashboard 3.8 Metrics in Discover 3.9 Conclusion", " 3 Lab 2 - Metricbeat In the previous lab we have started Elasticsearch and Kibana. In this lab we will setup Metricbeat to send logs of our System to Elasticsearch. When the log files are indexed in Elasticsearch, we can visualize these logs in a Dashboard using Kibana. Several metrics of my currently running laptop 3.1 Setup Metricbeat for the first time When we use Metricbeat for the first time, it needs an initial setup. The setup is specified in a Powershell script called install-service-metricbeat.ps1. We will walk through the steps to install and run metricbeat. Since the initial setup file is a Powershell script, we need to use Powershell instead of the Command Line this time to execute this script. We need to open Powershell as an Administrator in order to have the right permissions for executing scrips. Open Powershell as Administrator: Right-click Run as Administrator Open Powershell as an Administrator Navigate to the directory containing Metricbeat: cd metricbeat-7.11.2-windows-x86_64\\ We can use the dir command to get an overview of the files and folders of the current directory: Contents of the Metricbeat directory If you want to run Metricbeat for the first time, we need to execute the installation script install-service-metricbeat.ps1. Let’s execute this script. .\\install-service-metricbeat.ps1 It is possible you will get an error message “Authorization error”. This is a safety measure which prevents, malicious, scripts from running on our system. We need to lift this restriction for a bit in order to setup Metricbeat: You might stumble upon this Authorization error Insert Y to change the Execution Policy Set-ExecutionPolicy RemoteSigned .\\install-service-metricbeat.ps1 Set-ExecutionPolicy Restricted When the Powershell script is finished, execute the initial setup: .\\metricbeat.exe modules enable system Next step: ./metricbeat setup Metricbeat setup The final step, is ofcourse to start Metric beat. From the moment we start Metricbeat, it will look for System logs in our computer and send those to Elasticsearch to be indexed. To start Metricbeat, run the following command: ./metricbeat -e If we wait for a little while, we will see some log lines with metrics showing up: Logs passing through Metricbeat 3.2 Check out the Metrics Dashboard Now the setup is complete, we will start Metric beat. Metricbeat will find the System Logs on our laptop and index these to Elasticsearch. Let’s move to kibana to get an overview of the data in our Elasticsearch indices. In the Kibana menu select Dev Tools. This will bring us to the editor in which we can execute Elasticsearch requests. Editor in Dev Tools for executing Elasticsearch queries To get an overview of our currnet indices, we can use the following Elasticsearch request: GET _cat/indices?v 3.3 Enable the Metrics Dashboard in Kibana Select Add data in the header Ingest your data “Add data” When we finished the initial setup of Metricbeat, look it up in one of the many types of pre-configured log configurations. Select System metrics The pre-configured System metrics setup Since we already executed the steps (Step 1 - Step 4) as specified on the page, we can proceed by selecting System metrics dashboard Prepare the Metrics Dashboard by selecting System Metric Dashboard 3.4 Specify Index Patterns Before we can checkout our Metrics dashboard, we need to specify an Index Pattern. This will map an Elasticsearch index to a pattern that we can access to display in our visualisations and dashboards in Elasticsearch. Open Stack Management in de Kibana Menu Overview Stack Management This will open the Stack Management menu. Select Index Patterns in the menu on the left. Index patterns Let’s create an Index Pattern for Metricbeat. Insert metric beat in the “index pattern name” field. The field will look for the current indices in Elasticsearch Choose which field is used as the timestamp in our current source of log files. We will select the @timestamp field for this: Select timestamp We get an overview of our succesfully created Index Pattern. Our new Index Pattern 3.5 Checkout our Metrics Strangely we do not see any data yet. Metrics Dashboard no data Let’s hit Refresh button on the right. Metricbeat is continously pushing log-data to Elasticsearch. The Auto Refresh of Kibana will update the visualisations to display the new data. Our Metric data will be visible once we hit the Refresh button Other than refreshing for the latest logs, we can also specify a specific data range: Selecting a data range for the log visualisations Go ahead and explor some different metrics: Different Metrics Metricbeat 3.6 Check out our Metrics in the Dashboard Let’s checkout the Dashboard to get a nice overview of all the Metrics displayed in our dashboard. 3.7 Metrics in Dashboard Select Dashboard in the Kibana menu. Insert Metricbeat System in the search bar. Select the dashboard [Metricbeat System] Overview ECS. This is a pre-configured dashboard which is created during our setup of Metricbeat. As you can see, there are other pre-configured dashboards for different purposes. In our case, we can only use dashboards related to System Metrics since logs of our system are the only type of data we currently have in our Elasticsearch index. Metricbeat System - Overview ECS Dashboard We get an overview of all the systems for which we enabled Metricbeat to log metrics from. In our case this is one system/host, our own computer. An overview of the hosts/systems and their main metrics We can deep dive into the metrics of this system by selecting Host Selected host for the Metrics Dashboard 3.8 Metrics in Discover Select Discover in the Kibana menu. In Discover, we can execute KQL queries for exploring, aggregating or filtering our data. We will do this in Lab 6. Metrics in Discover 3.9 Conclusion That’s it for now. De eerstvolgende keer dat je metricbeat wilt gebruiken, hoef je niet meer het configuratie-script voor powershell te openen Je het dan gewoon via het Command Prompt doen. "],["ingest-windows-logs-with-winlogbeat.html", "4 Ingest Windows logs with Winlogbeat 4.1 Setup Winlogbeat 4.2 Initiate the Windows logs dashboard in Kibana 4.3 Check out the Windows logs in the Elasticsearch index 4.4 Index Patterns en Discover", " 4 Ingest Windows logs with Winlogbeat In this lab we will display Windows logs in our Kibana dashboard. The end results will look similar to the following screenshot: Winlogbeat showing Windows logs in Kibana 4.1 Setup Winlogbeat Just like in the labs for Elasticsearch, Kibana and Metricbeat, also Winlogbeat will be started from the Command Line. Make sure Elasticsearch and Kibana are running, both in their seperate Command Line sessions. Open a new Command Line and navigate to the directory where Winlogbeat is located. Start the Command Line (Command Prompt) in Windows cd winlogbeat-7.11.2-windows-x86_64 cd winlogbeat-7.11.2-windows-x86_64 In my case, the main files of Winlogbeat are located in another folder called winlogbeat-7.11.2-windows-x86_64. Therefore the two similar commands. Use the dir command to get an overview of the files and folders in the main directory of Winlogbeat. Files in the main Winlogbeat directory Just like Metricbeat, we need to setup Winlogbeat if this is the first time we use this version on the computer. winlogbeat setup Just like the setup of Metricbeat, the setup of Windows may take a little while. Winlogbeat setup When the setup is finished, we can start Winlogbeat: winlogbeat Start Winlogbeat from the Command Line No that we have started Winlogbeat, we want to initiate our dashboard for Windows logs in Kibana. 4.2 Initiate the Windows logs dashboard in Kibana From the homescreen of Kibana, select the option Add data Add data From the list of pre-configured options select Windows Event Log Windows Event Log from the pre-configured options Since we already executed the options for the (initial) setup of Winlogbeat, we can ignore the steps descbribed. We can verify if Elasticsearch has already received some data of our running Winlogbeat instance in the Command Line. Select the button Check data to let Kibana check if we already have some data. We get a message if Elasticsearch has succesfully received our data. Kibana Winlogbeat check data Next click the SIEM app button to explore our data. Explore data SIEM Congratulations, we are now presented with our Windows logs files in the dashboard. Make sure the filters are properly set. You can also scroll down the page in order to view all the visualisations. When we drill down the different visualisations we also get different tables that show our Windows logs. Windows logs 4.3 Check out the Windows logs in the Elasticsearch index Let’s checkout the raw Windows logs in our Elasticsearch index. In the Kibana menu, navigate to Dev Tools. In the Editor, execute the Elasticsearch request to get an overview of our current indices. GET _cat/indices?v The list with indices contains an index staring with winlogbeat (followed by the timestamp of the initation of the Winlogbeat instance). Let’s checkout what a Window log line indexed in Elasticsearch looks like GET winlogbeat-*/_search { &quot;query&quot;: { &quot;match_all&quot;: {} } } A Windows log indexed in Elasticsearch The _source field contains the original Windows log line. 4.4 Index Patterns en Discover Just like Metricbeat, we have the possiblity to discover the Windows logs provided by Windlogbeat. This requires us to also define an Index Pattern for our winlogbeat index. In see above we can recall these steps. "]]
